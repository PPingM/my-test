<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

       <!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
       <bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
              <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
              <property name="driverClassName" value="${jdbc.driver}"/>
              <!-- 基本属性 url、user、password -->
              <property name="url" value="${jdbc.url}"/>
              <property name="username" value="${jdbc.username}"/>
              <property name="password" value="${jdbc.password}"/>
              <!-- 配置初始化大小、最小、最大 -->
              <property name="initialSize" value="${jdbc.pool.init}"/>
              <property name="minIdle" value="${jdbc.pool.minIdle}"/>
              <property name="maxActive" value="${jdbc.pool.maxActive}"/>
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="60000"/>
              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="60000"/>
              <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
              <property name="minEvictableIdleTimeMillis" value="300000"/>
              <property name="validationQuery" value="${jdbc.testSql}"/>
              <property name="testWhileIdle" value="true"/>
              <property name="testOnBorrow" value="false"/>
              <property name="testOnReturn" value="false"/>
              <!-- 配置监控统计拦截的filters -->
              <property name="filters" value="stat"/>
       </bean>

       <!-- 配置扫描包，加载mapper代理对象 -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
              <property name="basePackage" value="com.rxx.mypro.users.mapper"/>
              <property name="sqlSessionFactoryBeanName" value="masterSqlSessionFactory" />
       </bean>
       <!-- 配置sqlsessionFactory -->
       <bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="masterDataSource"/>
              <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
              <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
              <property name="mapperLocations" value="classpath:mapper/*.xml"/>
       </bean>

       <!-- 事务管理器 -->
       <bean id="transactionManager"
             class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <!-- 数据源 -->
              <property name="dataSource" ref="masterDataSource" />
       </bean>
       <!-- 通知 -->
       <tx:advice id="txAdvice" transaction-manager="transactionManager">
              <tx:attributes>
                     <!-- 传播行为 -->
                     <tx:method name="save*" propagation="REQUIRED" />
                     <tx:method name="insert*" propagation="REQUIRED" />
                     <tx:method name="add*" propagation="REQUIRED" />
                     <tx:method name="create*" propagation="REQUIRED" />
                     <tx:method name="delete*" propagation="REQUIRED" />
                     <tx:method name="update*" propagation="REQUIRED" />
                     <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
                     <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
                     <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
              </tx:attributes>
       </tx:advice>
       <!-- 切面 -->
       <aop:config>
              <aop:advisor advice-ref="txAdvice"
                           pointcut="execution(* com.rxx.*.service.*.*(..))" />
       </aop:config>

</beans>